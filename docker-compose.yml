version: "3"
services:
  testedme:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PORT: 80
    ports:
      - 8080:80
    volumes:
      - .:/var/www/html/
    depends_on:
      - tested_pg
      - tested_redis
      - tested_elastic_search
      - tested_rabbitmq
    environment:
      DEBUG: "true"
    networks:
      test_net:
        ipv4_address: 172.28.1.1

  tested_pg:
    image: postgres:13.3-alpine
    ports:
      - 7432:5432
    volumes:
      - db_data:/var/lib/postgres
    environment:
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: testedme
    networks:
      test_net:
        ipv4_address: 172.28.1.2

  tested_redis:
    image: "redis:alpine"
    command: redis-server --requirepass docker
    ports:
      - 7379:6379
    volumes:
      - redis_data:/var/lib/redis
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      test_net:
        ipv4_address: 172.28.1.3

  tested_elastic_search:
    image: elasticsearch:7.10.1
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 7200:9200
    networks:
      test_net:
        ipv4_address: 172.28.1.5

  tested_rabbitmq:
    build:
      context: .
      dockerfile: MQDockerfile
    container_name: "rabbitmq"
    ports:
      - 7672:5672
      - 17672:15672
    networks:
      test_net:
        ipv4_address: 172.28.1.6

volumes:
  db_data: {}
  redis_data: {}
  elasticsearch_data:
    driver: local
networks:
  test_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
